{"version":3,"sources":["logo.svg","CustomNode.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","fontSize","height","padding","heading","fontWeight","subheader","desc","deleteIcon","root","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","memo","data","classes","type","position","style","background","onConnect","params","console","log","Card","className","CardHeader","action","IconButton","aria-label","CardActionArea","CardContent","Typography","variant","color","component","name","description","id","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","width","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","App","nodeTypes","selectorNode","CustomNode","useState","elements","setElements","nodeName","setNodeName","graphStyles","window","innerHeight","margin","els","addEdge","getNodeId","useCallback","instance","fitView","Date","getTime","onAdd","newNode","x","y","concat","e","BasicGraph","snapToGrid","defaultZoom","gap","Grid","container","item","xs","AppBar","Toolbar","InputBase","placeholder","input","inputProps","TextField","value","onChange","target","label","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.988c80aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\nimport { Grid, Paper, Tooltip, IconButton, CardHeader } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontSize: 10,\r\n    height: 10,\r\n    padding: 5\r\n\r\n  },\r\n  heading: {\r\n    fontSize: 10,\r\n    fontWeight: 600,\r\n    padding: 5\r\n  },\r\n  subheader: {\r\n    padding: 5\r\n  },\r\n  desc: {\r\n    fontSize: 7\r\n  },\r\n  deleteIcon: {\r\n    height: 10\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\nexport default memo(({ data }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        style={{ background: 'blue' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      <Card className={classes.root}>\r\n        <CardHeader className={classes.title}\r\n          action={\r\n            <IconButton aria-label=\"delete\" >\r\n              <DeleteIcon className={classes.deleteIcon} />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" className={classes.heading} color=\"textSecondary\" component=\"p\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.desc} color=\"textSecondary\" component=\"p\">\r\n              {data.description}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </CardActionArea>\r\n\r\n      </Card>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"left\"\r\n        id=\"a\"\r\n        style={{ background: 'blue' }}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"b\"\r\n        style={{ background: 'blue' }}\r\n      />\r\n    </>\r\n  );\r\n});","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, Background } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport { Grid, Button, TextField, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\nfunction App() {\n\n  const nodeTypes = {\n    selectorNode: CustomNode,\n  };\n  const initialElements = []\n  const classes = useStyles();\n  const [rfInstance, setRfInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const [nodeName, setNodeName] = useState('');\n  const text = 'Requirement Tracability Matrix'\n  const height = (window.innerHeight - 40) + 'px'\n  const graphStyles = { width: \"100%\", height: height, margin: '10px' };\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onLoad = useCallback((instance) => {\n    instance.fitView();\n  }, []);\n  const handleNodeChange = (e) => {\n    //  setNodeName(e.target.value);\n  }\n  const getNodeId = () => `randomnode_${+new Date().getTime()}`;\n  const onAdd = useCallback(() => {\n    const newNode = {\n      id: getNodeId(),\n      type: 'selectorNode',\n      style: { width: 'auto', maxWidth: '200px', height: '50px', fontSize: '8px', background: '#ffffff' },\n      data: { name: nodeName, description: 'React Flow is a library for building node-based applications. These can be simple static diagrams or complex node-based editors.' },\n      position: {\n        x: 0,\n        y: 20,\n      },\n    };\n    setNodeName('');\n    setElements((els) => els.concat(newNode));\n  }, [setElements, nodeName, setNodeName, handleNodeChange, getNodeId]);\n  const handleNameChange = (e) => {\n    setNodeName(e.target.value);\n  }\n\n  const BasicGraph = () => <ReactFlowProvider><ReactFlow className=\"workpace\" elements={elements} style={graphStyles}\n    snapToGrid={true} onConnect={onConnect} nodeTypes={nodeTypes}\n    defaultZoom={1.5} >  <Background color=\"#aaa\" gap={16} /> </ReactFlow></ReactFlowProvider>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n        <Grid container spacing={3}>\n\n          <Grid item xs={12}>\n            <AppBar position=\"static\">\n\n              <Toolbar> <Typography variant=\"h6\" color=\"inherit\">\n                {text}\n              </Typography>\n\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                  />\n                </div>\n              </Toolbar>\n            </AppBar>\n          </Grid>\n          <Grid item xs={10}>\n            <BasicGraph />\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}> <TextField id=\"outlined-basic\" value={nodeName} onChange={handleNameChange} label=\"Node Name\" variant=\"outlined\" /></Grid>\n              <Grid item xs={12}><Button onClick={onAdd} variant=\"contained\">Add Node</Button></Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}