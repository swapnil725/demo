{"version":3,"sources":["logo.svg","CustomNode.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","fontSize","height","padding","paper","spacing","margin","maxWidth","cursor","heading","fontWeight","width","wordBreak","subheader","desc","deleteIcon","root","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","inputHeading","border","inputDesc","memo","data","classes","type","position","style","background","onConnect","params","console","log","Paper","className","Grid","container","item","xs","sm","direction","labelClass","inputClass","initialValue","name","save","value","description","id","flexGrow","menuButton","marginRight","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","App","nodeTypes","selectorNode","CustomNode","useState","elements","setElements","nodeName","setNodeName","graphStyles","window","innerHeight","els","addEdge","getNodeId","useCallback","instance","fitView","Date","getTime","onAdd","newNode","x","y","concat","e","BasicGraph","snapToGrid","defaultZoom","gap","AppBar","Toolbar","Typography","variant","TextField","onChange","target","label","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87264f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\nimport { Grid, Paper, Tooltip, IconButton, CardHeader } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditableLabel from 'react-editable-label';\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontSize: 10,\r\n    height: 10,\r\n    padding: 5\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 200,\r\n    cursor: 'move'\r\n  },\r\n  heading: {\r\n    fontSize: 10,\r\n    fontWeight: 600,\r\n    padding: 5,\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    wordBreak: 'break-word'\r\n},\r\n  subheader: {\r\n  padding: 5\r\n},\r\n  desc: {\r\n  fontSize: 7,\r\n  cursor: 'pointer',\r\n  width: '100%',\r\n  wordBreak: 'break-word'\r\n},\r\n  deleteIcon: {\r\n  height: 10\r\n},\r\n  root: {\r\n  maxWidth: 345,\r\n},\r\n  media: {\r\n  height: 0,\r\n  paddingTop: '56.25%', // 16:9\r\n},\r\n  expand: {\r\n  transform: 'rotate(0deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n},\r\n  expandOpen: {\r\n  transform: 'rotate(180deg)',\r\n},\r\n  inputHeading: {\r\n  border: '1 solid grey',\r\n  width: '100%'\r\n},\r\n  inputDesc: {\r\n  border: '1 solid grey',\r\n  width: '100%'\r\n}\r\n}));\r\nexport default memo(({ data }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        style={{ background: 'grey', width: 10, height: 10 }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      {/* <Card className={classes.root}>\r\n        <CardHeader className={classes.title}\r\n          action={\r\n            <IconButton aria-label=\"delete\" >\r\n              <DeleteIcon className={classes.deleteIcon} />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" className={classes.heading} color=\"textSecondary\" component=\"p\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.desc} color=\"textSecondary\" component=\"p\">\r\n              {data.description}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </CardActionArea>\r\n\r\n      </Card>\r\n       */}\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <EditableLabel labelClass={classes.heading} inputClass={classes.inputHeading}\r\n                  initialValue={data.name}\r\n                  save={value => {\r\n                    console.log(`Saving '${value}'`);\r\n                  }}\r\n                />\r\n\r\n              </Grid>\r\n              <Grid item xs>\r\n                <EditableLabel labelClass={classes.desc} inputClass={classes.inputDesc}\r\n                  initialValue={data.description}\r\n                  save={value => {\r\n                    console.log(`Saving '${value}'`);\r\n                  }}\r\n                /> </Grid>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <Typography variant=\"subtitle1\">$19.00</Typography>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"left\"\r\n        id=\"a\"\r\n        style={{ background: 'blue', width: 10, height: 10 }}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"b\"\r\n        style={{ background: 'blue', width: 10, height: 10 }}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        id=\"c\"\r\n        style={{ background: 'blue', width: 10, height: 10 }}\r\n      />\r\n\r\n    </>\r\n  );\r\n});","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, Background } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport { Grid, Button, TextField, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\nfunction App() {\n\n  const nodeTypes = {\n    selectorNode: CustomNode,\n  };\n  const initialElements = []\n  const classes = useStyles();\n  const [rfInstance, setRfInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const [nodeName, setNodeName] = useState('');\n  const text = 'Requirement Tracability Matrix'\n  const height = (window.innerHeight - 40) + 'px'\n  const graphStyles = { width: \"100%\", height: height, margin: '10px' };\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onLoad = useCallback((instance) => {\n    instance.fitView();\n  }, []);\n  const handleNodeChange = (e) => {\n    //  setNodeName(e.target.value);\n  }\n  const getNodeId = () => `randomnode_${+new Date().getTime()}`;\n  const onAdd = useCallback(() => {\n    const newNode = {\n      id: getNodeId(),\n      type: 'selectorNode',\n      style: { width: 'auto', maxWidth: '200px', fontSize: '8px', background: '#ffffff' },\n      data: { name: nodeName, description: 'React Flow is a library for building node-based applications. These can be simple static diagrams or complex node-based editors.' },\n      position: {\n        x: 0,\n        y: 20,\n      },\n    };\n    setNodeName('');\n    setElements((els) => els.concat(newNode));\n  }, [setElements, nodeName, setNodeName, handleNodeChange, getNodeId]);\n  const handleNameChange = (e) => {\n    setNodeName(e.target.value);\n  }\n\n  const BasicGraph = () => <ReactFlowProvider><ReactFlow className=\"workpace\" elements={elements} style={graphStyles}\n    snapToGrid={true} onConnect={onConnect} nodeTypes={nodeTypes}\n    defaultZoom={1.5} >  <Background color=\"#aaa\" gap={16} /> </ReactFlow></ReactFlowProvider>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n        <Grid container spacing={3}>\n\n          <Grid item xs={12}>\n            <AppBar position=\"static\">\n              <Toolbar> <Typography variant=\"h6\" color=\"inherit\">\n                {text}\n              </Typography>\n                 </Toolbar>\n            </AppBar>\n          </Grid>\n          <Grid item xs={10}>\n            <BasicGraph />\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}> <TextField id=\"outlined-basic\" value={nodeName} onChange={handleNameChange} label=\"Node Name\" variant=\"outlined\" /></Grid>\n              <Grid item xs={12}><Button onClick={onAdd} variant=\"contained\">Add Node</Button></Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}